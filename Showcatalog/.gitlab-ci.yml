services:
  - postgres:12.2-alpine
stages:
  - build
  - test
  - package
  - deploy


variables:
  # This will suppress any download for dependencies and plugins or upload messages which would clutter the console log.
  # `showDateTime` will show the passed time in milliseconds. You need to specify `--batch-mode` to make this work.
  SONAR_TOKEN: $SONAR_TOKEN
  SONAR_HOST_URL: "http://pdp-pds-sq.uoclabs.uoc.es/"
  POSTGRES_DB: epcsd
  POSTGRES_USER: epcsd
  POSTGRES_PASSWORD: epcsd
  POSTGRES_HOST_AUTH_METHOD: trust

  SPRING_APPLICATION_JSON: '{
          "spring.datasource.url"  : "jdbc:postgresql://postgres:5432/epcsd?useSSL=false",
          "spring.datasource.username" : "epcsd",
          "spring.datasource.password" : "epcsd",
          "spring.kafka.bootstrap-servers" : "kafka:19092",
          "spring.jpa.show-sql" : true,
          "spring.jpa.hibernate.ddl-auto" : "create",
          "spring.batch.jdbc.initialize-schema" : "always",
          "spring.jpa.defer-datasource-initialization" : true,
          "spring.sql.init.mode" : "always",
          "server.error.include-message" : "always"
        }'

  MAVEN_OPTS: >-
    -Dhttps.protocols=TLSv1.2
    -Dmaven.repo.local=.m2/repository
    -Dorg.slf4j.simpleLogger.log.org.apache.maven.cli.transfer.Slf4jMavenTransferListener=WARN
    -Dorg.slf4j.simpleLogger.showDateTime=true
    -Djava.awt.headless=true
  # As of Maven 3.3.0 instead of this you may define these options in `.mvn/maven.config` so the same config is used
  # when running from the command line.
  # `installAtEnd` and `deployAtEnd` are only effective with recent version of the corresponding plugins.
  MAVEN_CLI_OPTS: >-
    --batch-mode
    --errors
    --fail-at-end
    --show-version
    -DinstallAtEnd=true
    -DdeployAtEnd=true  

cache:
  paths:
    - .m2/repository/
    - target/

java-build:
  # select the most appropriate image for your project
  image: maven:3.8-openjdk-11
  stage: build
  # Cache downloaded dependencies and plugins between builds.
  # The key here separates one cache per branch/tag ($CI_COMMIT_REF_SLUG)
  cache:
    key: "maven-$CI_COMMIT_REF_SLUG"
  script:
    - mvn $MAVEN_CLI_OPTS clean compile

test:
  stage: test
  image: maven:3.8-openjdk-11
  script:
    - mvn $MAVEN_CLI_OPTS test
  artifacts:
    reports:
      # declare the JUnit reports (recursive pattern for multi-module projects)
      junit:
        - "**/target/*-reports/TEST-*.xml"

sonarqube-check:
  stage: test
  image: maven:3.8-openjdk-11
  script:
    - mvn $MAVEN_CLI_OPTS verify sonar:sonar -Dsonar.projectKey=PDS-GRUPO4-SHOWCATALOG
  only:
    - main

deploy_prod:
  stage: deploy
  script:
    - cd /home/PDS-GRUPO4/cultureindahouse/Showcatalog
    - git pull origin main
    - sudo docker compose up --build -d showcatalog
  only:
    - main
  tags:
    - Azure
    


